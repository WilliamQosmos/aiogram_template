version: '3.7'

services:

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "54320:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_NAME" ]
      interval: 15s
      timeout: 10s
      retries: 7
      start_period: 12s
    restart: unless-stopped
    networks:
      botapi:

  redis:
    container_name: redis
    image: redis/redis-stack-server:latest
    restart: always
    ports:
      - "63790:6379"
    volumes:
      - redis_data:/var/lib/redis
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_ARGS=--save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD
    networks:
      botapi:

  template_bot:
    container_name: template_bot
    restart: always
    image: williamqosmos/aiogram_template
    environment:
      - DB_PORT=$DB_PORT
      - DB_PASSWORD=$DB_PASSWORD
      - DB_USER=$DB_USER
      - DB_NAME=$DB_NAME
      - DB_HOST=$DB_HOST

      - REDIS_HOST=$REDIS_HOST
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - REDIS_PORT=$REDIS_PORT
      - REDIS_DB=$REDIS_DB

      - TG_BOT_TOKEN=$TG_BOT_TOKEN
      - LOGGING_CHAT_ID=$LOGGING_CHAT_ID
      - STORAGE_TYPE=$STORAGE_TYPE
      - BOTAPI_TYPE=$BOTAPI_TYPE
      - BOTAPI_URL=$BOTAPI_URL
      - BOTAPI_FILE_URL=$BOTAPI_FILE_URL

      - WEB_SERVER_HOST=$WEB_SERVER_HOST
      - WEB_SERVER_PORT=$WEB_SERVER_PORT
      - WEBHOOK_PATH=$WEBHOOK_PATH
      - WEBHOOK_SECRET=$WEBHOOK_SECRET
      - BASE_WEBHOOK_URL=$BASE_WEBHOOK_URL
      - WEBHOOK_SSL_CERT=$WEBHOOK_SSL_CERT
      - WEBHOOK_SSL_PRIV=$WEBHOOK_SSL_PRIV
    networks:
      botapi:
      reverse-proxy:
    depends_on:
      - postgres
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"

  telegram-bot-api:
    image: aiogram/telegram-bot-api:latest
    environment:
      TELEGRAM_API_ID: $TELEGRAM_API_ID
      TELEGRAM_API_HASH: $TELEGRAM_API_HASH
      TELEGRAM_LOCAL: $TELEGRAM_LOCAL
    volumes:
      - telegram-bot-api-data:/var/lib/telegram-bot-api
    networks:
      botapi:

  nginx:
    image: nginx:latest
    volumes:
      - telegram-bot-api-data:/usr/share/nginx/html/var/lib/telegram-bot-api:ro
    environment:
      - NGINX_PORT=80
    networks:
      botapi:


volumes:
  telegram-bot-api-data:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  reverse-proxy:
    name: nginx-revers-proxy
  botapi:
    name: botapi